set nocompatible               " be iMproved
set history=256                " Number of things to remember in history.
set timeoutlen=250             " Time to wait after ESC (default causes an
" annoying delay)
set clipboard+=unnamed         " Yanks go on clipboard instead.
set modeline
set modelines=5                " default numbers of lines to read for
set autowrite                  " Writes on make/shell commands
set autoread
set directory=/tmp//           " prepend(^=) $HOME/.tmp/ to default path;
" use full path as backup filename(//)
set hidden                     " The current buffer can be put to the
" background without writing to disk
set hlsearch                   " highlight search
set incsearch                  " show matches while typing
let g:is_posix = 1             " vim's default is archaic bourne shell,
set tabstop=4                  " tab size eql 2 spaces
set softtabstop=4
set sts=4
set sw=4
set expandtab
set tw=140
set autoindent
set backup " make backup files
set backupdir=~/.vim/backup " where to put backup files
set clipboard+=unnamed " share windows clipboard
set directory=~/.vim/tmp " directory to place swap files in
set mouse=a "enable mouse in GUI mode
set mousehide                 " Hide mouse after chars typed
set showmatch                 " Show matching brackets.
set novisualbell              " No blinking
set noerrorbells              " No noise.
map <silent> <F2> :call g:ToogleNERDTreeLikeAChamp() <CR>
map <silent> <S-F2> <ESC>:NERDTreeClose <RETURN><CR>
map <silent> <F3> <ESC>:CommandT<RETURN>
set encoding=utf8
try
    lang en_US
catch
endtry
set ai "Auto indent
set si "Smart indet
set wrap "Wrap lines
set number
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
Bundle 'gmarik/vundle'
Bundle 'https://github.com/altercation/vim-colors-solarized.git'
Bundle 'https://github.com/vim-scripts/nginx.vim.git'
Bundle 'https://github.com/scrooloose/nerdtree.git'
Bundle 'https://github.com/mattn/zencoding-vim.git'
Bundle 'HTML-AutoCloseTag'
Bundle 'https://github.com/tpope/vim-fugitive.git'
Bundle 'Command-T'
Bundle 'loremipsum'
"Bundle 'kchmck/vim-coffee-script'
Bundle 'TaskList.vim'
"Bundle 'bash-support.vim'
Bundle 'pythoncomplete'
Bundle 'nvie/vim-pyunit'
Bundle 'nvie/vim-pep8'
Bundle 'nvie/vim-pyflakes'

colorscheme solarized
if has ('gui_running')
	if has('mac')
		set gfn=Monaco:h13
	else 
		set guifont=Monaco\ 13
	endif
	:set guioptions-=T
	:set guioptions-=m
endif
set background=dark
au BufNewFile,BufRead *.cshtml set filetype=html
au BufNewFile,BufRead *.master set filetype=html
au BufNewFile,BufRead *.less set filetype=less
au BufNewFile,BufRead *.nuspec set filetype=xml
if has('statusline')
	set laststatus=2
	" Broken down into easily includeable segments
	set statusline=%<%f\    " Filename
	set statusline+=%w%h%m%r " Options
	set statusline+=%{fugitive#statusline()} "  Git Hotness
	set statusline+=\ [%{&ff}/%Y]            " filetype
	set statusline+=\ [%{getcwd()}]          " current dir
	"set statusline+=\ [A=\%03.3b/H=\%02.2B] " ASCII / Hexadecimal value of char
	set statusline+=%=%-14.(%l,%c%V%)\ %p%%  " Right aligned file nav info
endif
let g:user_zen_expandabbr_key='<C-e>'
call togglebg#map("<F5>")
syntax on                      " enable syntax
filetype plugin indent on " load filetype plugins/indent settings
let NERDTreeShowHidden=1
let g:pyflakes_use_quickfix = 0
autocmd BufWritePost *.py call Pyflakes()
function! g:ToogleNERDTreeLikeAChamp()
    "Opens NERDTree if closed, focus on NERDTree if open and focus on a file or (FINALLY) close when focused on the NERDTree
    if exists("t:NERDTreeBufName")
        if (bufwinnr(t:NERDTreeBufName) != -1)
            :wincmd w
            return
        endif
    endif
    :NERDTreeToggle
endfunction
let g:PyUnitTestsStructure = "nose"
let g:ProjRootIndicators = [".git", "setup.py", "setup.cfg", ".projectroot"]
let g:PyUnitCmd = "export PYTHONPATH=$PWD/lib:$PWD/deps && /opt/xpyv/bin/nosetests -v -s --exe  -a \!tau_test -q --with-machineout"
let g:PyUnitTestPrefix = "tests/test_"
